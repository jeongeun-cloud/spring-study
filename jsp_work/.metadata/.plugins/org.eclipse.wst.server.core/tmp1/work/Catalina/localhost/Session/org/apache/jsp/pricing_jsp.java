/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.55
 * Generated at: 2020-06-01 05:33:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class pricing_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("<!doctype html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("\r\n");
      out.write("    <!-- Bootstrap core CSS -->\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\">\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"css/pricing.css\">\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("  \r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"pricing-header px-3 py-3 pt-md-5 pb-md-4 mx-auto text-center\">\r\n");
      out.write("\t  <h1 class=\"display-4\">Pricing</h1>\r\n");
      out.write("\t  <p class=\"lead\">기존의 서비스들과 다르게 한 달 무료 체험 후 만족 할 시 계속 서비스를 이어 나갈 수 있는 대한민국 유일의 온라인 강의 플랫폼입니다.<br> 지금 바로 무료체험 해보세요. </p>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t  <div class=\"card-deck mb-3 text-center\">\r\n");
      out.write("\t    <div class=\"card mb-4 shadow-sm\">\r\n");
      out.write("\t      <div class=\"card-header\">\r\n");
      out.write("\t        <h4 class=\"my-0 font-weight-normal\">Free</h4>\r\n");
      out.write("\t      </div>\r\n");
      out.write("\t      <div class=\"card-body\">\r\n");
      out.write("\t        <h1 class=\"card-title pricing-card-title\">￦0 <small class=\"text-muted\">/ m</small></h1>\r\n");
      out.write("\t        <ul class=\"list-unstyled mt-3 mb-4\">\r\n");
      out.write("\t          <li>30일 무료체험</li>\r\n");
      out.write("\t          <li>조회 수 확인 가능</li>\r\n");
      out.write("\t          <li>배너 광고 무료 제공</li>\r\n");
      out.write("\t          <li>전문가 상담 항시 대기</li>\r\n");
      out.write("\t        </ul>\r\n");
      out.write("\t        <button type=\"button\" class=\"btn btn-lg btn-block btn-primary\">Get started</button>\r\n");
      out.write("\t      </div>\r\n");
      out.write("\t    </div>\r\n");
      out.write("\t    <div class=\"card mb-4 shadow-sm\">\r\n");
      out.write("\t      <div class=\"card-header\">\r\n");
      out.write("\t        <h4 class=\"my-0 font-weight-normal\">Pro</h4>\r\n");
      out.write("\t      </div>\r\n");
      out.write("\t      <div class=\"card-body\">\r\n");
      out.write("\t        <h1 class=\"card-title pricing-card-title\">￦15,000 <small class=\"text-muted\">/ m</small></h1>\r\n");
      out.write("\t        <ul class=\"list-unstyled mt-3 mb-4\">\r\n");
      out.write("\t          <li>강의 10개 무료 등록</li>\r\n");
      out.write("\t          <li>조회수 + 수익료 확인</li>\r\n");
      out.write("\t          <li>배너 + 카테고리 </li>\r\n");
      out.write("\t          <li>달마다 실적 메일 서비스</li>\r\n");
      out.write("\t        </ul>\r\n");
      out.write("\t        <button type=\"button\" class=\"btn btn-lg btn-block btn-primary\">Get started</button>\r\n");
      out.write("\t      </div>\r\n");
      out.write("\t    </div>\r\n");
      out.write("\t    <div class=\"card mb-4 shadow-sm\">\r\n");
      out.write("\t      <div class=\"card-header\">\r\n");
      out.write("\t        <h4 class=\"my-0 font-weight-normal\">Enterprise</h4>\r\n");
      out.write("\t      </div>\r\n");
      out.write("\t      <div class=\"card-body\">\r\n");
      out.write("\t        <h1 class=\"card-title pricing-card-title\">￦29,000 <small class=\"text-muted\">/ m</small></h1>\r\n");
      out.write("\t        <ul class=\"list-unstyled mt-3 mb-4\">\r\n");
      out.write("\t          <li>강의 무제한 등록가능</li>\r\n");
      out.write("\t          <li>모든 서비스 이용가능</li>\r\n");
      out.write("\t          <li>Pro서비스 + 파워링크</li>\r\n");
      out.write("\t          <li>무료 컨설팅 서비스 제공</li>\r\n");
      out.write("\t        </ul>\r\n");
      out.write("\t        <button type=\"button\" class=\"btn btn-lg btn-block btn-primary\">Get started</button>\r\n");
      out.write("\t      </div>\r\n");
      out.write("\t    </div>\r\n");
      out.write("\t  </div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<small class=\"d-block mb-3 text-muted\">&copy; jeongeun-corp</small>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
